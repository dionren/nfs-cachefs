name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build with Docker
        run: |
          chmod +x build/docker-build.sh
          ./build/docker-build.sh

      - name: Verify build artifacts
        run: |
          ls -la *.tar.gz*
          docker images | grep nfs-cachefs

      - name: Generate release notes
        id: release_notes
        run: |
          VERSION="${{ steps.version.outputs.VERSION }}"
          cat > release_notes.md << EOF
          # NFS-CacheFS v$VERSION
          
          ## 📦 安装方法
          
          ### 预编译二进制包（推荐）
          \`\`\`bash
          wget https://github.com/${{ github.repository }}/releases/download/v$VERSION/nfs-cachefs-v$VERSION-linux-x86_64.tar.gz
          tar -xzf nfs-cachefs-v$VERSION-linux-x86_64.tar.gz
          cd nfs-cachefs-v$VERSION-linux-x86_64
          sudo ./install.sh
          \`\`\`
          
          ## 🔍 校验和
          \`\`\`bash
          sha256sum -c nfs-cachefs-v$VERSION-linux-x86_64.tar.gz.sha256
          \`\`\`
          
          ## 📋 更新内容
          $(sed -n "/## \[$VERSION\]/,/## \[/p" CHANGELOG.md | head -n -1)
          
          ## 🛠️ 技术信息
          - **构建方式**: Docker 构建（rust:1.78-alpine）
          - **目标平台**: Linux x86_64
          - **链接方式**: 静态链接（musl libc）
          - **镜像大小**: 约 24MB
          - **兼容性**: 所有 Linux 发行版
          
          ## 📖 文档
          - [安装指南](https://github.com/${{ github.repository }}#快速开始)
          - [发布流程](https://github.com/${{ github.repository }}/blob/main/docs/RELEASE_PROCESS.md)
          - [更新日志](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: NFS-CacheFS v${{ steps.version.outputs.VERSION }}
          body_path: release_notes.md
          files: |
            nfs-cachefs-v${{ steps.version.outputs.VERSION }}-linux-x86_64.tar.gz
            nfs-cachefs-v${{ steps.version.outputs.VERSION }}-linux-x86_64.tar.gz.sha256
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean up
        run: |
          rm -f *.tar.gz *.tar.gz.sha256 release_notes.md
          docker system prune -f 